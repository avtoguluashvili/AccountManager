@page "/account/edit/{id:int?}"
@using AccountManager.Dto
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>@(isEditMode ? "Edit Account" : "Create Account")</h3>

<EditForm Model="account" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Company Name:</label>
        <InputText class="form-control" @bind-Value="account.CompanyName" />
    </div>
    <div class="mb-3">
        <label class="form-label">Is Active:</label>
        <InputCheckbox class="form-check-input" @bind-Value="isActive" />
    </div>
    <button type="submit" class="btn btn-success">Save</button>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public int? id { get; set; }

    private AccountDto account = new();
    private bool isActive;
    private bool isEditMode => id.HasValue;

    protected override async Task OnInitializedAsync()
    {
        if (isEditMode)
        {
            account = await Http.GetFromJsonAsync<AccountDto>($"api/account/{id}");
            isActive = account.IsActive == 1;
        }
    }

    private async Task HandleValidSubmit()
    {
        account.IsActive = isActive ? 1 : 0;

        try
        {
            HttpResponseMessage response;

            if (isEditMode)
            {
                response = await Http.PutAsJsonAsync($"api/account/{id}", account);
            }
            else
            {
                response = await Http.PostAsJsonAsync("api/account", account);
            }

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/accounts");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error saving account: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Exception occurred while saving account: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/accounts");
    }
}
